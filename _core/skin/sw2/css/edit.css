@charset "utf-8";

/* // キャラクター
---------------------------------------------------------------------------------------------------- */
#regulation > dl {
  grid-template-columns: 1fr 1fr 1fr 4fr;
}
#sw2\.0 #regulation > dl:first-of-type {
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 5fr;
}
#regulation dl.regulation-grow {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: auto;
}
@media screen and (min-width:736px){
  #regulation .annotate {
    margin-top: -1em;
    margin-bottom: 10px;
  }
}
@media screen and (max-width:735px){
  #regulation > dl {
    grid-template-columns: 1fr 1fr 1fr;
  }
  #sw2\.0 #regulation > dl {
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  }
  #regulation > dl > dt:last-of-type {
    grid-column: 1 / span 3;
    grid-row: 3;
  }
  #regulation > dl > dd:last-of-type {
    grid-column: 1 / span 3;
    grid-row: 4;
  }
}
#regulation > label:last-child {
  margin-top: 0.5em;
  border: none;
}

#area-status {
  grid-template-columns: 0.6fr 0.5fr 1.6fr 1.8fr;
}

@media screen and (max-width:735px){
  #area-status {
    grid-template-columns: 2fr 1fr;
    grid-gap: var(--box-v-gap) var(--box-h-gap);

    grid-template-areas:
      "IMG  IMG "
      "PER  PER "
      "STT  STT "
      "STT  STT "
      "sSTT sSTT"
      "EXP  LVL "
    ;
  }
  dl#level dt::after {
    content:''
  }
  dl#exp br {
    display: none;
  }
}

#personal dl#race         { flex-basis: 58%; order: 1; }
#personal dl#age          { flex-basis: 20%; order: 2; }
#personal dl#gender       { flex-basis: 20%; order: 3; }
#personal dl#race-ability { flex-basis: 85%; order: 4; }
#personal dl#birth        { flex-basis: 30%; order: 6; }
#personal dl#faith        { flex-basis: 69%; order: 7; }
#personal dl#sin          { flex-basis: 14%; order: 5; }
#personal #race-ability-select:empty {
  display: none;
}
#personal #race-ability-select select {
  width: auto;
}
#personal #race-ability-value:has(input) {
  display: block !important;
}

#status dl[id^="stt-add"]::before {
  left: -.6rem;
}
#status dl#stt-pointbuy-type {
  grid-column: span 2;
}
#status dl:nth-child(n+16):nth-child(-n+21) dd {
  font-size: 120%;
}
#status dl:nth-child(n+16):nth-child(-n+21) dd .small {
  font-size: 80%;
}
@media screen and (max-width:735px){
  #status {
    grid-gap: 5px;
    grid-template-columns: 1fr 1fr 1fr 1fr 0.8fr 1fr;
  }
  #status dl.box {
    overflow-x: visible;
  }
  #status dl dt {
    font-size: 2rem;
  }
  #status dl#stt-pointbuy-TPS dt,
  #status dl#stt-pointbuy-AtoF dt {
    font-size: 1.8rem;
  }
  #status dl#stt-pointbuy-type {
    grid-column: span 3;
  }
  #status dl dd input[type="number"] {
    min-width: 2em;
  }
}

#sub-status input,
#mobility input {
  width: 3.5em;
}

#area-ability {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  align-items: flex-start;
}
#area-ability > * {
  margin-bottom: var(--box-v-gap);
  margin-left: 0;
}
#area-ability > p {
  flex-basis: 100%;
}

#area-classes {
  flex-basis: 100%;
  display: flex;
  justify-content: space-between;
}
#area-classes.common-classes-off {
  flex-basis: calc(66% - 1rem);
  margin-right: var(--box-h-gap);
}

#classes {
  flex-basis: 66%;
  flex-grow: 1;
  display: grid;
  position: relative;
  grid-template-columns: 1fr 1fr;
}
#classes h2 {
  grid-column: span 2;
}
#classes h3 {
  margin-top: 0;
  font-size: 90%;
}
#common-classes {
  flex-grow: 1;
  margin: 0 0 0 var(--box-h-gap) !important;
}
#classes #classes-weapon-user {
  grid-column: 1;
}
#classes #classes-magic-user {
  grid-column: 1;
  align-self: end;
}
#classes #classes-other-user {
  grid-column: 2;
  grid-row: 2 / span 2;
}

#classes dl {
  flex-grow: 1;
  flex-basis: calc(50% - 10px);
  grid-template-columns: 1fr 3.5em;
}
#classes dl dt {
  font-size: inherit;
}
#common-classes td:last-child {
  width: 3.5em;
}
@media screen and (max-width:735px){
  #area-classes {
    display: block;
  }
  #status dl:nth-child(n+16):nth-child(-n+21) dd {
    transform: none;
    font-size: 1.25em;
  }
  #classes {
    display: block;
    width: 100%;
  }
  #classes h3 {
    margin-top: .5em;
  }
  #classes dl {
    padding-left: 2em;
    padding-right: 2em;
    grid-template-columns: 1fr 5em;
  }
  #classes dl dt {
    display: flex;
    align-items: center;
  }
  #common-classes {
    margin: var(--box-v-gap) 0 0 !important;
  }
  #common-classes table {
    width: calc(100% - 1rem - 3.6em);
    min-width: 0;
    margin: 0 1.8em;
  }
  #common-classes td:last-child {
    width: 5em;
  }
}
#classes dl select {
  font-size: 80%;
}

#combat-feats {
  margin-left: 0 !important;
}
#combat-feats select {
  margin-left: 1em;
  width: calc(100% - 4px - 1em);
}
#combat-feats #combat-feat-vagrants-auto li {
  display: grid;
  grid-template-columns: 5em auto;
}
#combat-feats #combat-feat-vagrants-auto li::before {
  content: attr(data-label);
  align-self: end;
  text-align: right;
  white-space: nowrap;
  font-size: 90%;
}
#combat-feats #combat-feat-vagrants-auto li select {
  margin-left: 5px;
  width: calc(100% - 4px - 5px);
}
#combat-feats .feats-options {
  margin: .3rem .5em;
  border-width: 0 0 1px;
  border-style: solid;
}
#combat-feats .feats-options h6 {
  font-size: 85%;
}
#combat-feats .feats-options li {
  display: inline-block;
  border: none;
  font-size: 90%;
  line-height: 1;
}
#combat-feats .feats-options li input {
  margin-right: .5em;
}
#combat-feats > p:last-child {
  font-size: 90%;
}
@media screen and (max-width:735px){
  #combat-feats ul {
    padding-left: 2em;
    padding-right: 2em;
  }
}
#mystic-arts {
  position: relative;
}
#mystic-arts h2 + div {
  position: absolute;
  top: .2rem;
  right: .5em;
  font-size: 80%;
}
#mystic-arts h2 + div span {
  font-size: 120%;
}
#mystic-arts h2:nth-child(n+2) {
  margin-top: 0;
}
#mystic-arts ul li {
  display: grid;
  grid-template-columns: max-content 1fr 4em;
  grid-template-rows: auto;
}
#sw2\.0 #mystic-arts ul li {
  grid-template-columns: max-content 1fr 6em;
}
#sw2\.0 #mystic-arts ul li .honor-pt {
  margin: 2px;
}
#sw2\.0 #mystic-arts ul li .honor-pt input {
  margin-right: 0;
}
#mystic-arts ul li .handle {
  width: 1.2em;
  margin-left: -.5rem;
}
@media screen and (max-width:735px){
  #mystic-arts ul {
    padding-left: 1em;
    padding-right: 1em;
  }
}
#combat-feats-lv1bat select optgroup:empty {
  display: none;
}

#crafts {
  flex-basis: 66%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;
}
#crafts > .box {
  flex-basis: calc(50% - 1rem);
  margin: 0 0 var(--box-v-gap) var(--box-h-gap) !important;
}
#area-classes.common-classes-off + div + #crafts > .box {
  flex-basis: calc(33% - 1rem);
}
#area-classes.common-classes-off + div + #crafts > .box:first-child {
  margin-left: 0 !important;
}
@media screen and (max-width:735px){
  #area-classes.common-classes-off + div + #crafts > .box {
  flex-basis: calc(50% - 1rem);
  }
}
#crafts > .box ul {
  margin-bottom: -1px;
}
#crafts > .box ul li:last-child {
  padding-bottom: 1px;
}
@media screen and (max-width:735px){
  #crafts {
    display: block;
  }
  #crafts > .box {
    margin: 0 0 var(--box-v-gap) !important;
  }
  #crafts ul {
    padding-left: 2em;
    padding-right: 2em;
  }
}

#craft-alchemy .select-input:not(.free):not([data-color=""]) {
  position: relative;

  & select {
    padding-left: calc(1em + 2px);
  }
}
#craft-alchemy .select-input:not(.free)::before,
#craft-alchemy .select-input:not(.free)::after {
  font-family: "Material Symbols Outlined", sans-serif;
  font-variation-settings: 'FILL' 1;
  width: 1em;
  height: 1em;
  position: absolute;
  top: calc((100% - 1em) / 2);
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
#craft-alchemy .select-input:not(.free)::before {
  left: calc(2px + 1px + 2px);
}
#craft-alchemy .select-input:not(.free)::after {
  left: calc(2px + 1px + 2px + 1em);
}
#craft-alchemy .select-input:not(.free)[data-color*="白"][data-color*="黒"],
#craft-alchemy .select-input:not(.free)[data-color*="赤"][data-color*="緑"] {
  & select {
    padding-left: calc(2em + 2px);
  }
}
#craft-alchemy .select-input:not(.free)[data-color*="白"][data-color*="黒"]::before {
  content:'\e87d';
  color: #bbb;
}
#craft-alchemy .select-input:not(.free)[data-color*="白"][data-color*="黒"]::after {
  content:'\ead5';
  color: #777;
}
#craft-alchemy .select-input:not(.free)[data-color*="赤"][data-color*="緑"]::before {
  content:'\e91d';
  color: #a00;
}
#craft-alchemy .select-input:not(.free)[data-color*="赤"][data-color*="緑"]::after {
  content:'\e123';
  color: #0c3;
}


#area-status + p {
  margin-top: var(--box-v-gap);
}

#area-package #package table {
  margin-top: 1px;
  margin-bottom: -1px;
}
#package table tr:first-child th:first-child {
  width: 10em;
}
#package table tr td:nth-last-child(2) input {
  width: calc(100% - 1em);
}
#package table tr.disabled {
  & td:has(.value)::before {
    content: "―";
  }

  & td > .value {
    display: none;
  }
}


#language dl {
  display: grid;
  grid-template-columns: auto 3em 3em;
  grid-template-rows: auto;
  
  margin: 0 5px;
}
#language dl dt {
  font-weight: normal;
}
#language dl dd {
  text-align: center;
}
#language table td {
  vertical-align: bottom;
}
#language table td.handle::before {
  display: block;
  width: 1.2em;
  margin-left: -.5rem;
  text-align: center;
}
#language table tr > *:nth-last-child(-n+2) {
  width: 3em;
  position: relative;
}
#language table#language-table td select,
#language table#language-table td .lang-select-view {
  position: absolute;
  top: 1px;
  left: 0;
  right: 0;
  bottom: 1px;
  height: auto;
  cursor: pointer;
}
#language table#language-table td select {
  appearance: none;
  opacity: 0;
}
#language table#language-table td .lang-select-view {
  display: block;
  margin: 1px 1px 0 0;
  border-width: 1px;
  border-style: solid;
  border-color: var(--box-input-border-color);
  border-radius: 5px;
  font-size: 85%;
  pointer-events: none;
}
#language select + .lang-select-view { background: var(--input-bg-color); }
.night #language select option { color: var(--text-color); }
#language select option[value="auto"],
#language select[data-type="auto"] + .lang-select-view { background: #00ccff22; }
#language select[data-type="auto"] + .lang-select-view::before { content: '自動'; }
#language select option[value="Sag"],
#language select[data-type="Sag"] + .lang-select-view { background: #55ff0033; }
#language select[data-type="Sag"] + .lang-select-view::before { content: 'セージ'; }
#language select option[value="Bar"],
#language select[data-type="Bar"] + .lang-select-view { background: #ffaa0033; }
#language select[data-type="Bar"] + .lang-select-view::before { content: 'バード'; }
#language select option[value="listen"],
#language select[data-type="listen"] + .lang-select-view { background: #77777722; }
#language select[data-type="listen"] + .lang-select-view::before { content: '△'; }
#language #language-notice {
  background: #ff000033;
  padding: .3em .5em;
  border-radius: 5px;
  font-size: 88%;
  line-height: 1.3;
}
#language #language-notice:empty {
  display: none;
}
@media screen and (max-width:735px){
  #area-actions {
    display: block;
  }
  #area-actions .box {
    margin: var(--box-v-gap) 0 0;
  }
  #language :is(table, dl) {
    width: calc(100% - 1rem - 3em);
    min-width: 0;
    margin: 0 1.5em;
  }
}

#magic-power {
  min-width: 10em;
}
#magic-power table {
}
#magic-power table td input[type=number] {
  width: 3.5em;
}
#magic-power a {
  font-size: 90%;
}
#magic-power #fairycontact {
  display: flex;
  margin: 0 -.2em;
  border-width: .1rem 0 0;
  border-style: solid;
}
#magic-power #fairycontact label {
  padding: .2em;
}
#magic-power #fairycontact label input[type="checkbox"] {
  width: auto;
  margin-right: .2em;
  border: 0;
  vertical-align: middle;
  transform: scale(1.1);
}
#magic-power #fairycontact label span {
  padding: .2em 0;
  font-size: 85%;
}
#magic-power #fairycontact label input[type="number"] {
  width: 2em;
  border: 0;
  vertical-align: middle;
  transform: scale(1.1);
}
#magic-power table td:nth-child(3) {
  padding-left : .5em;
  padding-right: .5em;
  border-width: 0 1px;
  border-style: none dotted;
  font-size: 85%;
  text-align: left;
}
#magic-power table td:nth-child(3) input {
  vertical-align: text-bottom;
}
#magic-power table td:nth-child(3) label {
  line-height: 1;
}
#magic-power table td:nth-child(4),
#magic-power table td:nth-child(5),
#magic-power table td:nth-child(6) {
  width: max-content !important;
  padding-right: .2em;
  text-align: left;
}
#magic-power table td b {
  display: inline-block;
  min-width: 2.5em;
  padding-right : .2em;
  line-height: 1.6;
  font-weight: normal;
  text-align: center;
  white-space: nowrap;
}
#magic-power #magic-power-hr td {
  height: .5em;
}
@media screen and (max-width:735px){
  #magic-power {
    width: 100%;
    overflow-x: auto;
  }
  #magic-power table {
    margin-top: -.5em;
    table-layout: fixed;
  }
  #magic-power thead th:nth-child(2) { width: 7.5em; } /* 魔法名 */
  #magic-power thead th:nth-child(3) { width:   6em; } /* 専用 */
  #magic-power thead th:nth-child(4) { width: 8.5em; } /*  */
  #magic-power thead th:nth-child(5) { width: 8.5em; } /*  */
  #magic-power thead th:nth-child(6) { width: 9.5em; } /*  */

  #magic-power table tr > *:nth-child(1) {
    display: none;
  }
  #magic-power table thead th:nth-child(2) {
    visibility: hidden;
  }
  #magic-power table tr td:nth-child(3) {
    white-space: nowrap;
  }
  #magic-power #fairycontact {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
  }
  #magic-power table td input[type=number] {
    width: 2.5em;
  }
}

#classes dl dt.zero-data,
option.zero-data {
  background-color: rgba(0,200,255,0.2);
}
#classes dl dt.zero-data {
  font-family: 'Arial';
}
option.zero-data::before {
  content: '★';
}

#attack-classes {
  width: calc(25% + 24.7em + 1px);
}
#weapons {
  width: 100%;
}
#weapons table {
  border-bottom-width: 1px;
  border-bottom-style: solid;
}
#weapons table td {
  font-size: 90%;
  vertical-align: top;
}
#weapons table td:last-child {
  padding: 0;
  border-right: 0;
  vertical-align: middle;
}
#weapons table td b {
  display: inline-block;
}
#weapons table td b::before {
  content: '=';
  margin-right: .2rem;
}
#weapons td input[name$="Acc"],
#weapons td input[name$="Dmg"] {
  width: 3.5em;
}
#weapons td input[type="checkbox"] {
  vertical-align:bottom;
}
#weapons .annotate {
  text-align: center;
}
#weapons td span.handle {
  display: block;
  width: 2em;
  line-height: 2.2;
  margin-right: auto;
}
#weapons td:last-child span[onclick] {
  padding: 7px 5px;
}
#weapons thead th:nth-child(2) { width: 4.2em; } /* 用法 */
@media screen and (max-width:735px){
  #attack-classes {
    overflow-x: auto;
  }
  #attack-classes table {
    table-layout: fixed;
  }
  #attack-classes thead th:nth-child(1) { width:  17em; } /* 名前 */
  #attack-classes thead th:nth-child(2) { width:   4em; } /* 必筋 */
  #attack-classes thead th:nth-child(3) { width: 5.5em; } /* 命中 */
  #attack-classes thead th:nth-child(4) { width:   4em; } /* 威力 */
  #attack-classes thead th:nth-child(5) { width:   4em; } /* Ｃ値 */
  #attack-classes thead th:nth-child(6) { width: 5.5em; } /* 追加Ｄ */
  
  #weapons {
    overflow-x: auto;
  }
  #weapons table {
    table-layout: fixed;
  }
  #weapons thead th:nth-child(1) { width:  12em; } /* 名前 */
  #weapons thead th:nth-child(2) { width:   5em; } /* 用法 */
  #weapons thead th:nth-child(3) { width:   4em; } /* 必筋 */
  #weapons thead th:nth-child(4) { width: 5.5em; } /* 命中 */
  #weapons thead th:nth-child(5) { width:   4em; } /* 威力 */
  #weapons thead th:nth-child(6) { width:   4em; } /* Ｃ値 */
  #weapons thead th:nth-child(7) { width: 5.5em; } /* 追加Ｄ */
  #weapons thead th:nth-child(8) { width: 1.4em; } /* 専用 */
  #weapons thead th:nth-child(9) { width:  10em; } /* カテゴリ */
  #weapons thead th:nth-child(10){ width:  10em; } /* 技能 */
}

#evasion-classes {
  width: calc(25% + 18.5em + 1px);
}
#evasion-class-row .flex {
  display: flex;
  align-items: center;
  padding-left: .2em;
}
#armours thead th.type { width:   2em; }
#armours thead th.cate { width:   6em; }
#armours thead th.name { width:   25%; }
#armours thead th.reqd { width: 3.5em; }
#armours thead th.eva  { width: 3.5em; }
#armours thead th.def  { width: 3.5em; }
#armours thead th.own  { width: 1.5em; }
#armours thead th.calc { width: 1.5em; }
#armours thead th.note { width:  auto; }

#armours tbody th.type::before {
  content: '';
}

#armours tfoot tr:first-child {
  border-bottom-width: 1px !important;
  border-bottom-style: solid !important;
}
#armours .defense-total td:first-child {
  padding: .2em 0;
  text-align: right;
  text-wrap: balance;
}
#armours .defense-total td label input + span {
  font-size: 85%;
}

@media screen and (max-width:735px){
  #evasion-classes {
    width: auto;
  }
  #evasion-classes thead th:nth-child(1) { width:14.5em; } /* 名前 */
  #evasion-classes thead th:nth-child(2) { width:   4em; } /* 必筋 */
  #evasion-classes thead th:nth-child(3) { width:   4em; } /* 回避 */
  #evasion-classes thead th:nth-child(4) { width:   4em; } /* 防護 */
  #armours {
    overflow-x: auto;
  }
  #armours table {
    min-width: 0;
    table-layout: fixed;
  }
  #armours thead th.type { width: 2.5em; } /* 種別 */
  #armours thead th.cate { width:  6em; } /* 種別 */
  #armours thead th.name { width:  12em; } /* 名前 */
  #armours thead th.reqd { width:   4em; } /* 必筋 */
  #armours thead th.eva  { width:   4em; } /* 回避 */
  #armours thead th.def  { width:   4em; } /* 防護 */
  #armours thead th.own  { width: 1.5em; } /* 専用 */
  #armours thead th.calc { width: 1.5em; } /* 専用 */
  #armours thead th.note { width:  16em; } /* 備考 */
}

#accessories thead th:nth-child(1) { width: 1.5em; } /*  */
#accessories thead th:nth-child(2) { width: 2.5em; } /* 種別 */
#accessories thead th:nth-child(3) { width:   25%; } /* 名前 */
#accessories thead th:nth-child(4) { width: 4.5em; } /* 専用 */
#accessories thead th:nth-child(5) { width:  auto; } /* 備考 */
#accessories tbody th {
  cursor: ns-resize;
}
#accessories tbody tr:nth-child(6n+1),
#accessories tbody tr:nth-child(6n+2),
#accessories tbody tr:nth-child(6n+3) {
  background-color: transparent;
}
#accessories tbody tr:nth-child(6n+4),
#accessories tbody tr:nth-child(6n+5),
#accessories tbody tr:nth-child(6n+6) {
  background-color: var(--box-even-rows-bg-color);
}
@media screen and (max-width:735px){
  #accessories {
    overflow-x: auto;
  }
  #accessories table {
    min-width: 0;
    table-layout: fixed;
  }
  #accessories thead th:nth-child(1) { width: 1.5em; } /* ✔ */
  #accessories thead th:nth-child(2) { width: 2.5em; } /* 種別 */
  #accessories thead th:nth-child(3) { width:  12em; } /* 名前 */
  #accessories thead th:nth-child(4) { width: 4.5em; } /* 専用 */
  #accessories thead th:nth-child(5) { width:  16em; } /* 備考 */
  
  #accessories tbody td:nth-child(4) { padding-left: 0; } /* 専用 */
}


@media screen and (max-width:735px){
  #area-items {
    flex-direction: column;
  }
  div#area-items-R {
    margin-left: 0;
  }
}

#money input {
  width: calc(100% - 3em);
}

#items textarea {
  height: 20em;
}

#cashbook textarea {
  height: 16em;
}
#cashbook-total-value {
  font-size: 120%;
  font-weight: bold;
}
#cashbook p {
  font-size: 90%;
  font-family: inherit;
  white-space: normal;
  text-align: left;
  padding-left: .5em;
}


#battle-items ul li {
  display: grid;
  grid-template-columns: max-content 1fr;
  grid-template-rows: auto;
}
#battle-items ul li::before {
  left: 0;
  pointer-events: none;
}
#battle-items ul li .handle {
  display: inline-block;
  width: 1.8em;
  margin-left: calc(-1em - .2rem);
  text-align: right;
}

#honor {
  grid-template-columns: .95fr 1.05fr;
}
#honor-rank {
  display: flex;
}
#honor-rank > input {
  flex-basis: 3.5em;
}

.honor-items table td.handle::before {
  display: block;
  width: 1.4em;
  margin: 0 -.5rem;
  text-align: center;
}
.honor-items > p:nth-last-child(1) {
  font-size: 90%;
  border-width: 1px 0 0;
  border-style: dotted;
}
#sw2\.0 .honor-items td:last-child {
  position: relative;
  width: 6.5em;
}
#sw2\.0 .honor-pt {
  display: grid;
  grid-template-columns: 1.5em 1fr;
  position: relative;
  white-space: nowrap;
}
#sw2\.0 .honor-pt select,
#sw2\.0 .honor-pt .honor-select-view {
  grid-column: 1;
  grid-row: 1;
  width: calc(1.5em + 1px);
  min-width: calc(1.5em + 1px);
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  cursor: pointer;
}
#sw2\.0 .honor-pt select {
  appearance: none;
  opacity: 0;
}
#sw2\.0 .honor-pt .honor-select-view {
  display: grid;
  border-width: 1px;
  border-style: solid;
  border-color: var(--box-input-border-color);
  border-radius: 5px;
  pointer-events: none;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  place-items: center;
  line-height: 1;
}
#sw2\.0 .honor-pt .honor-select-view::before {
  font-size: 85%;
}
#sw2\.0 select + .lang-select-view { background: var(--input-bg-color); }
#sw2\.0 select option[value="human"],
#sw2\.0 select[data-type="human"] + .honor-select-view { background: #00ccff22; }
#sw2\.0 select[data-type="human"] + .honor-select-view::before { content: '人'; }
#sw2\.0 select option[value="barbaros"],
#sw2\.0 select[data-type="barbaros"] + .honor-select-view { background: #ffaa0033; }
#sw2\.0 select[data-type="barbaros"] + .honor-select-view::before { content: '蛮'; }
#sw2\.0 select option[value="dragon"],
#sw2\.0 select[data-type="dragon"] + .honor-select-view { background: #55ff0033; }
#sw2\.0 select[data-type="dragon"] + .honor-select-view::before { content: '竜'; }
#sw2\.0 .honor-pt input {
  grid-column: 2;
  width: auto;
  margin: 0;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.battle-items ul li.fail::before {
  content: '✖';
  opacity: 0.8;
}

#free-note,
#free-history {
  padding-bottom: .3rem;
}
#free-note textarea,
#free-history textarea {
  height: 18em;
}

#history table thead th:first-child{ width: 1.4em; }
#history table thead th.date       { width:   6em; }
#history table thead th.title      { width:  12em; }
#history table thead th.exp        { width:   5em; }
#history table thead th.money      { width: 4.5em; }
#history table thead th.honor      { width: 3.5em; }
#history table thead th.honor.zero-data { width: 5em; }
#history table thead th.grow       { width: 4.5em; }
#history table thead th.gm         { width:   6em; }
#history table thead th.member     { width:  auto; }

@media screen and (max-width:735px){
  #history table  { table-layout: fixed; }
  #history table thead th.title  { width: 12em; }
  #history table thead th.member { width: 16em; }
}


#history table tbody td.money {
  white-space: nowrap;
}
#history table tbody td.money::after {
  margin: 0 2px 0 -3px !important;
  font-size: 1.1rem;
}
#history table tbody td.money input {
  width: calc(100% - 0.9em);
}


article > form > hr {
  margin: 5rem 0px;
  border-width: 1px 0 0;
  border-style: solid;
}

#f-public,
#f-checkboxes {
  width: 16em;
  margin-top: var(--box-v-gap);
  padding: .5em;
}

#f-profile {
  margin-top: var(--box-v-gap);
}
#f-profile textarea {
  height: 10em;
}

#f-actions {
  margin-top: var(--box-v-gap);
}
#f-actions table {
  margin-top: var(--box-v-gap);
}
#f-actions table {
  width: 100%;
}
#f-actions table tr.border-top {
  border-width: 1px 0 0;
  border-style: solid;
}
#f-actions table th {
  white-space: nowrap;
}
#f-actions td[rowspan]{
  width: 2em;
  font-size: 2rem;
  line-height: 1;
  text-align: center;
}
#f-actions td.number {
  width: 2.5em;
  font-size: 2rem;
  text-align: center;
}
#f-actions td:nth-last-child(2){
  width: 3.5em;
}

#f-note {
  min-height: auto;
  margin-top: var(--box-v-gap);
}
#f-note textarea {
  height: 10em;
}

#deleteform {
  margin-top: 5rem;
  padding-top: 5rem;
  border-width: 1px 0 0;
  border-style: solid;
  text-align: right;
}

#deleteform input[type="submit"] {
  margin-left: .5rem;
  padding: .3rem .5rem;
}



/* // モンスター
---------------------------------------------------------------------------------------------------- */
form#monster {
  & :is(input, textarea, select):is([readonly], [disabled]),
  & fieldset[disabled] :is(input, textarea, select) {
    background-color: lightgray;
    pointer-events: none;
  }

  & fieldset[disabled] :is(.add-del-button, .handle) {
    color: lightgray;
    pointer-events: none;
  }

  & fieldset[disabled] label,
  & label:has(:is(input, textarea, select):is([readonly], [disabled])) {
    pointer-events: none;
  }
}
form#monster:not(.individualization) .individualization-only,
form#monster:not(.individualization) [data-related-field] {
  display: none !important;
}
.individualization-area {
  display: none;
}
form#monster .individualization-area {
  display: block;

  & label {
    border: none;
  }
}
form#monster :is(div, fieldset).box {
  margin: var(--box-v-gap) 0;
  overflow-x: auto;
}
form#monster .box h2 {
  font-size: 100%;
}
form#monster #group dl {
  grid-template-columns: 3em max-content max-content max-content 3fr;

  & dt.tag {
    margin-left: 1em;
  }
}
form#monster.individualization #group dd.kind fieldset {
  display: none;
}
form#monster #group label:has([type="radio"][name="kind"]) {
  display: inline-flex;
  flex-flow: row;
  align-items: center;

  & [type="radio"] {
    margin-right: 0.15em;
  }
}
form#monster #group label:has([type="radio"][name="kind"]):not(:first-of-type) {
  margin-left: 0.35em;
}
form#monster #group dl .select-input {
  width: 100%;
}
form#monster.individualization #group :is([name="taxa"], [name="taxaFree"], label:has([name="mount"])) {
  display: none;
}
form#monster.individualization #group .is-mount[data-is-mount="true"]::before {
  content: "（騎獣）";
}
form#monster.individualization #group .is-mount:not([data-is-mount="true"]) {
  display: none;
}
form#monster.individualization #group .is-golem[data-is-golem="true"]::before {
  content: "（ゴーレム）";
}
form#monster.individualization #group .is-golem:not([data-is-golem="true"]) {
  display: none;
}
form#monster.mount .monster-only {
  display: none;
}
form#monster:not(.mount) .mount-only {
  display: none;
}
form#monster:not(.golem) .golem-only {
  display: none;
}
form#monster.golem .omit-if-golem {
  display: none;
}
form#monster.not-calc .calc-only {
  display: none;
}
form#monster #area-name {
  font-weight: bold;
}
form#monster #monster-name {
  flex-grow: 1;
}
form#monster #monster-name input {
  width: calc(100% - 3em);
}
form#monster.individualization #character-name dd {
  text-align: left;
}
form#monster.individualization #character-name [name="monsterName"] {
  display: none;
}
form#monster.individualization #player-name dd {
  text-align: left;
}
form#monster.individualization #player-name [name="author"] {
  display: none;
}
form#monster label:has(:is([name="exclusiveMount"], [name="ridingHpReinforcement"], [name="ridingHpReinforcementSuper"])) {
  border: none;

  & span {
    opacity: 1;
  }
}
form#monster.individualization #player-name {
  grid-template-rows: repeat(4, max-content);
  grid-template-columns: auto;

  & :is(dt, dd):nth-child(1) { grid-row: 1 / 2; }
  & :is(dt, dd):nth-child(2) { grid-row: 2 / 3; }
  & :is(dt, dd):nth-child(3) { grid-row: 3 / 4; }
  & :is(dt, dd):nth-child(4) { grid-row: 4 / 5; }
}
form#monster.individualization #player-name dt:first-child {
  display: flex;
}
form#monster.individualization #player-name dt:first-child::before {
  content: "元データ";
}
form#monster.individualization #section-common > .status {
  [name="price"],
  [name="priceRental"],
  [name="priceRegenerate"],
  [name="lvMin"],
  [name="lvMax"],
  [name="intellect"],
  [name="perception"],
  [name="disposition"],
  [name="sin"],
  [name="language"],
  [name="habitat"],
  [name="reputation"],
  [name="reputation+"],
  [name="weakness"],
  [name="initiative"],
  [name="mobility"],
  [name="vitResist"],
  [name="vitResistFix"],
  [name="mndResist"],
  [name="mndResistFix"] {
    display: none;
  }
}
form#monster.individualization:not(.mount) #section-common > .status [name="lv"] {
  display: none;
}
form#monster.individualization.mount #section-common > .status [data-related-field="lv"] {
  display: none;
}
form#monster.individualization #section-common > *:has([name="statusTextInput"]) {
  display: none;
}
form#monster div.status dl {
  margin: .5rem 0;
  place-items: center start;
}
form#monster div.status dl dd {
  text-align: left;
}
form#monster div.status dl.price dd + dd::before {
  content: "／";
}
form#monster.individualization div.status [name="requiredConjurerLv"] {
  display: none;
}
form#monster div.status input[name^="lv"],
form#monster div.status input[name="sin"],
form#monster div.status input[name="sinOffset"],
form#monster div.status input[name^="reputation"],
form#monster div.status input[name="initiative"],
form#monster div.status input[name*="Resist"] {
  width: 5em;
}
form#monster div.status input[name^="price"] {
  width: 6em;
}
form#monster div.status input[name="price"] {
  width: 8em;
}
form#monster.golem div.status dl.material {
  display: grid;
  grid-template-rows: repeat(2, max-content);
  grid-template-columns: repeat(3, max-content);

  & dt {
    grid-row: 1 / -1;
    grid-column: 1 / 2;
  }

  & .material-name {
    grid-row: 1 / 2;
    grid-column: 2 / -1;
    width: 100%;
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: max-content 1fr;

    & .label {
      display: flex;
      align-items: center;
    }

    & input {
      max-width: 16em;
    }
  }

  & .normal-price,
  & .higher-price {
    display: flex;
    flex-flow: row;
    align-items: center;
  }

  & .normal-price {
    grid-row: 2 / 3;
    grid-column: 2 / 3;
  }

  & .normal-price::before {
    content: "（";
  }

  & .higher-price {
    grid-row: 2 / 3;
    grid-column: 3 / 4;
  }

  & .higher-price::before {
    content: "／";
  }

  & .higher-price::after {
    content: "）";
  }

  & input[name^="materialPrice"] {
    width: 6em;
  }
}
form#monster.individualization div.status dl.material {
  grid-template-rows: 1fr;
  grid-template-columns: repeat(4, max-content);

  & input:is([name="materialName"], [name^="materialPrice"]) {
    display: none;
  }

  & .material-name {
    grid-row: 1 / -1;
    grid-column: 2 / 3;

    & .label {
      display: none;
    }
  }

  & .normal-price {
    grid-row: 1 / -1;
    grid-column: 3 / 4;
  }

  & .higher-price {
    grid-row: 1 / -1;
    grid-column: 4 / 5;
  }

  & :is(.normal-price, .higher-price) > .suffix {
    display: none;
  }

  & [data-related-field^="materialPrice"]::before {
    content: ":";
  }
}
form#monster.individualization div.status .price [data-related-field]:empty::before {
  content: "－";
}
form#monster.individualization div.status .sin [data-related-field="sin"]:empty::before {
  content: "0";
}
form#monster.individualization div.status .level dd:last-child {
  display: none;
}
form#monster div.status input[name="language"] {
  width: 25em;
}
form#monster div.status .language {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: repeat(2, max-content) 1fr;

  .additional {
    padding-left: 0.75em;
    width: 100%;
    display: grid;
    grid-template-rows: 1fr;
    grid-template-columns: max-content 1fr;

    .label {
      display: inline-flex;
      align-items: center;
    }

    & input {
      width: 100%;
      margin: 0;
    }
  }
}
form#monster.golem div.status .language .additional {
  display: none;
}
form#monster.individualization div.status .habitat {
  display: grid;
  grid-template-rows: 1fr;
  grid-template-columns: max-content max-content 1fr;
}
form#monster.individualization div.status .habitat .replacement {
  padding-left: 0.75em;
  width: 100%;
  display: inline-grid;
  grid-template-rows: 1fr;
  grid-template-columns: max-content 1fr;

  & label:has([type="checkbox"]) {
    grid-column: 1 / 2;
    display: flex;
    padding: 0;
    flex-flow: row;
    justify-content: flex-start;
    align-items: center;
    border: none;

    & span {
      display: inline;
    }
  }

  & label:has([type="checkbox"])::after {
    content: ":";
  }

  [name="habitatReplacement"] {
    grid-column: 2 / 3;
    margin: 0;
    width: 100%;
  }
}
form#monster.individualization.golem #section-common > .status.remove-weakness {
  .reputation [data-related-field="reputation+"],
  .weakness [data-related-field] {
    text-decoration-line: line-through;
  }
}
form#monster.individualization #section-common > .status .mobility {
  & dd.individualization-only > span:not(:first-child)::before {
    content: "／";
  }

  & dd.individualization-only {
    .offset:empty {
      display: none;
    }

    .offset::before {
      content: "+";
    }

    .form::before {
      content: "（";
    }

    .form::after {
      content: "）";
    }
  }
}
form#monster.individualization #section-common > .status dl:is(.vit-resistance, .mnd-resistance) {
  .offset-by-sword-fragment {
    margin-left: 0.25em;
  }

  .offset-by-sword-fragment::before {
    content: "+";
  }

  .offset-by-sword-fragment:empty {
    display: none;
  }
}
@media screen and (max-width:735px){
  form#monster #group dl {
    grid-template-columns: max-content 1fr max-content;
    grid-template-rows: auto auto;

    & dt.tag {
      margin-left: 0;
    }
  }
  form#monster div.status input[name="language"] {
    width: 18em;
  }
  form#monster div.status dl {
    flex-wrap: wrap;
  }
  form#monster div.status dl dd + dd::before {
    margin-left: 3em;
  }
}

form#monster table.status {
  border-width: 0;
}
form#monster.individualization table.status {
  display: none;
}
form#monster table.status thead th.lv     { width: 0em; }
form#monster table.status thead th.handle { width: 1.4em; cursor: unset; }
form#monster table.status thead th.name   { width: auto; }
form#monster table.status thead th.acc    { width: 12%; }
form#monster table.status thead th.atk    { width: 12%; }
form#monster table.status thead th.eva    { width: 12%; }
form#monster table.status thead th.def    { width: 12%; }
form#monster table.status thead th.hp     { width: 12%; }
form#monster table.status thead th.mp     { width: 12%; }

form#monster.mount table.status thead th.lv     { width: 1.8em; }
form#monster.mount table.status thead th.handle { width: 1.4em; }
form#monster.mount table.status thead th.name   { width: auto; }
form#monster.mount table.status thead th.acc    { width: 8.5%; }
form#monster.mount table.status thead th.atk    { width: 8.5%; }
form#monster.mount table.status thead th.eva    { width: 8.5%; }
form#monster.mount table.status thead th.def    { width: 8.5%; }
form#monster.mount table.status thead th.hp     { width: 8.5%; }
form#monster.mount table.status thead th.mp     { width: 8.5%; }
form#monster.mount table.status thead th.vit    { width: 8.5%; }
form#monster.mount table.status thead th.mnd    { width: 8.5%; }

form#monster table.status thead th.handle::before { content: ""; }
form#monster table.status tbody + tbody {
  border-top-width: 3px;
  border-top-style: double;
}
form#monster table.status tbody:last-of-type {
  border-bottom-width: 1px;
  border-bottom-style: solid;
}
form#monster table.status tr {
  border-right: hidden;
}
form#monster table.status tbody:has(.current) th {
  background-color: #fb07;
}
form#monster table.status th {
  background: transparent;
}
form#monster table.status tbody tr:not(:first-child) th {
}
form#monster table.status td {
  white-space: nowrap;
}
form#monster:not(.mount) table.status td.handle {
  border-left: 0;
}
form#monster table.status td:last-child {
  border-right: 0;
}
form#monster:not(.mount) table.status input {
  width: calc(100% - 1.8em);
}
form#monster table.status input[name$="Style"] {
  width: calc(100% - 4px);
}
form#monster.mount table.status td:has(.button) {
  padding: 1px;
}
form#monster.mount table.status .button {
  font-size: 85%;
  padding-top: 2px;
  padding-bottom: 2px;
}
form#monster.individualization table.status + .add-del-button {
  display: none;
}
form#monster #source-status-table,
form#monster #source-status-table :is(th, td) {
  border: 1px solid var(--box-outside-border-color);
  border-collapse: collapse;
}
form#monster #source-status-table {
  width: 100%;
  border-top-width: 0;
}
form#monster #source-status-table thead :is(tr, th) {
  border: none;
}
form#monster #source-status-table,
form#monster #source-status-table tr,
form#monster #source-status-table tr > :is(th, td):first-child,
form#monster:not(.mount) #source-status-table tr > :is(th, td):nth-child(2) {
  border-left-width: 0;
}
form#monster #source-status-table,
form#monster #source-status-table tr,
form#monster #source-status-table tr > :is(th, td):last-child,
form#monster:not(.mount) #source-status-table tr > :is(th, td):is(.mp) {
  border-right-width: 0;
}
form#monster:not(.mount) #source-status-table,
form#monster:not(.mount) #source-status-table tbody:last-child tr:last-child,
form#monster:not(.mount) #source-status-table tbody:last-child tr:last-child :is(th, td) {
  border-bottom-width: 0;
}
form#monster.mount {
  & #source-status-table[data-selected-level="1"] tbody:not([data-level="1"]),
  & #source-status-table[data-selected-level="2"] tbody:not([data-level="2"]),
  & #source-status-table[data-selected-level="3"] tbody:not([data-level="3"]),
  & #source-status-table[data-selected-level="4"] tbody:not([data-level="4"]),
  & #source-status-table[data-selected-level="5"] tbody:not([data-level="5"]),
  & #source-status-table[data-selected-level="6"] tbody:not([data-level="6"]),
  & #source-status-table[data-selected-level="7"] tbody:not([data-level="7"]),
  & #source-status-table[data-selected-level="8"] tbody:not([data-level="8"]),
  & #source-status-table[data-selected-level="9"] tbody:not([data-level="9"]),
  & #source-status-table[data-selected-level="10"] tbody:not([data-level="10"]),
  & #source-status-table[data-selected-level="11"] tbody:not([data-level="11"]),
  & #source-status-table[data-selected-level="12"] tbody:not([data-level="12"]),
  & #source-status-table[data-selected-level="13"] tbody:not([data-level="13"]),
  & #source-status-table[data-selected-level="14"] tbody:not([data-level="14"]),
  & #source-status-table[data-selected-level="15"] tbody:not([data-level="15"]),
  & #source-status-table[data-selected-level="16"] tbody:not([data-level="16"]),
  & #source-status-table[data-selected-level="17"] tbody:not([data-level="17"]) {
    display: none;
  }
}
form#monster #source-status-table td:has(.base .value:empty)::before,
form#monster #source-status-table td:has(.value:empty):not(:has(.base))::before {
  content: "―";
}
form#monster #source-status-table td :is(.base, .fixed):has(.value:empty) {
  display: none;
}
form#monster #source-status-table td .offset:is([data-offset=""], :not([data-offset])):empty {
  display: none;
}
form#monster #source-status-table td .offset[data-offset]:not([data-offset=""]):not([data-offset="0"]):not([data-offset^="-"])::after {
  content: "+" attr(data-offset);
}
form#monster #source-status-table td .offset[data-offset^="-"]::after {
  content: attr(data-offset);
}
form#monster #source-status-table td .fixed {
  margin-left: 0.25em;
}
form#monster #source-status-table td .fixed::before {
  content: "(";
}
form#monster #source-status-table td .fixed::after {
  content: ")";
}
form#monster fieldset.parts input {
  width: auto;
}
form#monster fieldset.parts input[name="partsNum"] {
  width: 5em;
}
form#monster.individualization fieldset.parts:is([data-part-count="1"], [data-part-count=""]) {
  display: none;
}
form#monster.individualization fieldset.parts :is(label, input) {
  display: none;
}
@media screen and (max-width:735px){
  form#monster table.status { width: 50em; }
  form#monster fieldset.parts dl { display: block; }
}

form#monster.individualization:is(.mount, .golem) .sword-fragment-box {
  display: none;
}
form#monster.individualization .sword-fragment-box {
  & label.num {
    display: flex;
    flex-flow: row;
    justify-content: flex-start;
    align-items: center;
    padding: 0.5rem;

    & input {
      width: 5em;
    }

    .effect-summary {
      display: flex;
      flex-flow: row;
      align-items: center;

      & span:not(:first-child)::before {
        content: "、";
      }

      & i.value {
        font-style: normal;
        font-weight: normal;
      }

      & i.value:not(:empty)::before {
        content: "+";
      }
    }

    .effect-summary::before {
      content: "（";
    }

    .effect-summary::after {
      content: "）";
    }

    .effect-summary:not(:has(.value:not(:empty))) {
      display: none;
    }
  }

  .offset-distribution,
  .offset-distribution :is(thead, tbody, tr, th, td) {
    border-style: solid;
    border-color: var(--box-inside-border-color);
    border-width: 2px;
    border-collapse: collapse;
  }

  .offset-distribution {
    margin-left: 1rem;
    margin-bottom: 1rem;

    & th,
    & td {
      vertical-align: middle;
    }

    & thead {
      background-color: var(--monster-head-bg-color);

      & tr:first-child,
      & tr:first-child th[colspan] {
        border-bottom-width: 1px;
      }

      & tr:last-child,
      & tr:last-child th {
        border-top-width: 1px;
      }

      & th {
        padding-top: 0.25rem;
        padding-bottom: 0.25rem;
      }

      .part-name {
        padding-left: 0.5em;
        padding-right: 0.5em;
      }

      .base,
      .offset,
      .total {
        min-width: 6rem;
        background-color: rgba(255, 255, 255, 50%);
      }

      .base {
        font-size: 65%;
      }

      .offset {
        font-size: 55%;
      }
    }

    & tbody {
      & tr, & td {
        border-top-width: 1px;
        border-bottom-width: 1px;
      }

      .part-name {
        min-width: 5em;
      }

      .base,
      .offset {
        font-weight: normal;
        border-right-width: 0;
      }

      .offset,
      .total {
        border-left-width: 0;
      }

      .offset input[type="number"] {
        width: 4em;
      }
    }

    & tfoot {
      background-color: var(--monster-head-bg-color);

      & th:first-child {
        padding: 0.5rem 1rem;
      }

      & td:not(:first-child) {
        background-color: rgba(255, 255, 255, 50%);
      }

      & td.deficient {
        background-color: rgba(255, 255, 0, 0.5);
      }

      & td.excess {
        background-color: rgba(255, 0, 0, 0.5);
      }

      .offset[data-expected]:not([data-expected=""])::after {
        content: "/" attr(data-expected);
      }
    }

    .base,
    .offset {
      border-right-width: 1px;
    }

    .offset,
    .total {
      border-left-width: 1px;
    }
  }

  .offset-distribution[data-part-count="1"] {
    display: none;
  }
}
.night form#monster.individualization .sword-fragment-box {
  .offset-distribution {
    & thead {
      .base,
      .offset,
      .total {
        background-color: rgba(0, 0, 0, 50%);
      }
    }

    & tfoot {
      & td:not(:first-child) {
        background-color: rgba(0, 0, 0, 50%);
      }
    }
  }
}
form#monster.individualization .sword-fragment-box[data-sword-fragment-num="0"] {
  .offset-distribution {
    display: none;
  }
}

form#monster.individualization textarea[name="skills"] + .annotate {
  display: none;
}
form#monster textarea[name="skills"] + .annotate code {
  font-size: 100%;
  font-family: monospace,serif;
}

form#monster #section-common > .skills {
  position: relative;
}
form#monster.individualization #section-common > .skills {
  padding-bottom: 0;
}
form#monster.individualization #section-common > .skills > .riding-checks {
  position: absolute;
  top: 0.25em;
  right: 0.25em;

  & label {
    border: none;
  }

  & label > span {
    opacity: 1;
  }
}
form#monster.individualization:not(.mount) #section-common > .skills > .riding-checks {
  display: none;
}
form#monster textarea[name="skills"] {
  height: 16em;
  padding: 2px;
}
form#monster.individualization textarea[name="skills"] {
  display: none;
}
form#monster.individualization [data-related-field="skills"] {
  border-color: var(--monster-head-bg-color);
  border-style: solid;
  border-width: 0 1px 1px 1px;
  padding: 0.5em;
}

form#monster .reinforcement-items {
  & .max-count,
  & .grade {
    display: inline-flex;
    flex-flow: row;
    justify-content: flex-start;
    align-items: center;
    margin-left: 1rem;
  }

  & .max-count input {
    width: 6em;
  }

  & .grade select {
    width: max-content;
  }

  & .items {
    margin-top: 1.5rem;
    margin-left: 1rem;
    margin-right: 1rem;
    display: grid;
    grid-template-columns: max-content 1fr;

    & :is(dt, dd).item {
      border-top: 1px solid lightgray;
      padding-top: 0.7rem;
    }

    & :is(dt, dd).item:not(:first-of-type) {
      margin-top: 0.7rem;
    }

    & :is(dt, dd).item:last-of-type {
      padding-bottom: 0.7rem;
    }

    & dt.item {
      grid-column: 1 / 2;
      display: flex;
      flex-flow: row;
      justify-content: flex-start;
      align-items: flex-start;
      padding-right: 1em;
    }

    & dt.item[data-prerequisite-item]::before {
      content: "└";
    }

    & dd.item {
      grid-column: 2 / 3;
    }

    & dl.item {
      width: 100%;
      display: grid;
      grid-template-rows: repeat(3, max-content);
      grid-template-columns: repeat(4, max-content) 1fr;

      & :is(.ability, .price, .part-restriction) {
        grid-row: 1 / 2;
        display: flex;
        flex-flow: row;
        justify-content: flex-start;
        align-items: center;
      }

      & .additional-field {
        grid-column: 2 / -1;
      }

      & dt.ability {
        display: none;
      }

      & dd.ability {
        grid-column: 1 / 2;
        min-width: 13em;
      }

      & dd.ability[data-suffix]:not([data-suffix=""])::after {
        content: attr(data-suffix);
      }

      & dt.price {
        grid-column: 2 / 3;
      }

      & dd.price {
        grid-column: 3 / 4;
        display: flex;
        flex-flow: row;
        justify-content: flex-start;
        align-items: center;

        & input {
          width: 8em;
        }
      }

      & dt.part-restriction {
        grid-column: 4 / 5;
        margin-left: 0.75em;
      }

      & dd.part-restriction {
        grid-column: 5 / 6;
        width: 10em;

        & .requirement-all-parts::before {
          content: ":";
        }
      }

      & dt.additional-field {
        grid-row: 2 / 3;
        text-align: left;
        margin-top: 0.5em;
      }

      & dt.additional-field::after {
        content: ":";
      }

      & dd.additional-field {
        grid-row: 3 / 4;
        display: grid;
        grid-template-rows: 1fr;
      }

      & dd.additional-field[data-kind="詳細"] {
        grid-template-columns: 1fr;

        & textarea {
          width: 100%;
          min-height: 8em;
          margin: 0;
        }
      }

      & dd.additional-field[data-kind="打撃点"] {
        grid-template-columns: max-content 1fr;

        & input {
          grid-column: 2 / 3;
          width: 6em;
          margin: 0;
        }
      }

      & dd.additional-field[data-kind="地上移動速度"] {
        grid-template-columns: 1fr;

        & input {
          width: 16em;
          margin: 0;
        }
      }
    }
  }

  & .items.hide-part-restriction {
    & dl.item {
      grid-template-columns: repeat(3, max-content) 1fr;
    }

    & :is(dt, dd).part-restriction {
      display: none;
    }
  }
}
form#monster.individualization .reinforcement-items {
  & :is(.max-count, .grade) {
    margin-top: 0.5em;

    [data-related-field]::before {
      content: ":";
    }
  }

  & .max-count,
  & .grade {
    display: none;
  }

  & .items {
    display: none;

    & :is(dt, dd).item:not(.supported) {
      display: none;
    }

    & dt.item {
      & input {
        display: none;
      }
    }

    & dl.item {
      & dd.price,
      & dd.part-restriction,
      & dd.additional-field {
        & input,
        & textarea {
          display: none;
        }
      }

      & dt.price,
      & dt.part-restriction,
      & dt.additional-field[data-kind="詳細"] {
        display: none;
      }

      & dd.price {
        grid-column: 2 / 4;
      }

      & dd.part-restriction {
        grid-column: 4 / 6;
        margin-left: 0.75em;

        & .requirement-all-parts::before {
          display: none;
        }
      }

      & dd.additional-field[data-kind="詳細"] {
        & [data-related-field] {
          width: 100%;
          text-align: left;
        }
      }

      & span[data-related-field] {
        width: max-content;
      }
    }
  }

  & section.using-items {
    display: grid;
    margin: 0.5em 0.5em 0 0.5em;
    padding-bottom: 0.7em;

    & .part-restriction-group:first-of-type {
      margin-top: 0;
    }

    & .part-restriction-group:not(:first-of-type) {
      margin-top: 1.45em;
    }

    & .part-restriction-group {
      & h4 {
        margin: 0;

        & .count {
          font-style: normal;
          font-weight: normal;
          font-size: 90%;

          & .max::before {
            content: "/";
          }

          & .max::after {
            content: "個";
          }
        }

        & .count::before {
          content: "（";
        }

        & .count::after {
          content: "）";
        }
      }

      & h4.item-overflow {
        background-image: linear-gradient(to right, rgba(255, 0, 0, 0.4), transparent);

        & .count .current {
          color: #c00;
        }
      }
    }

    & .part-restriction-group:has(h4.item-overflow) {
      background-color: rgba(255, 0, 0, 0.1);
    }

    & .part-restriction-group[data-name="全部位必須"] {
      & h4 {
        & .count {
          display: none;
        }
      }
    }

    & .using-items {
      margin: 0;
    }

    & .using-item {
      margin-top: 1.1em;
      padding-left: 0.35em;
      display: grid;
      grid-template-rows: 1fr;
      grid-template-columns: 1fr;

      & label {
        grid-row: 1 / -1;
        grid-column: 1 / -1;
        display: grid;
        grid-template-rows: repeat(2, max-content);
        grid-template-columns: repeat(3, max-content) 1fr;
      }

      & input.to-use {
        grid-row: 1 / 2;
        grid-column: 2 / 3;
        margin: 0;
        transform: initial;
      }

      & .name-area {
        grid-row: 1 / 2;
        grid-column: 3 / 4;
        margin: 0;
        display: flex;
        flex-flow: row;
        justify-content: flex-start;
        align-items: center;
        line-height: 100%;

        & span {
          display: inline-flex;
          flex-flow: row;
          align-items: center;
        }

        & .item-grade,
        & .item-price {
          margin: 0 0.2em;
        }

        & :is(.item-grade, .item-price)::before {
          content: "(";
        }

        & :is(.item-grade, .item-price)::after {
          content: ")";
        }
      }

      & .name-area::before {
        content: "〈";
      }

      & .name-area::after {
        content: "〉";
      }

      & .ability-outline {
        grid-row: 1 / 2;
        grid-column: 4 / 5;
        display: flex;
        flex-flow: row;
        justify-content: flex-start;
        align-items: center;
        line-height: 100%;
      }

      & .ability-outline:has(.ability-name:empty) {
        display: none;
      }

      & .ability-outline::before {
        content: "（";
      }

      & .ability-outline::after {
        content: "）";
      }

      & .ability-details,
      & .select-attribute {
        margin-top: 0.25em;
        border-left: 0.1em solid rgba(128, 128, 128, 0.2);
        padding-left: 0.5em;
      }

      & .ability-details {
        grid-row: 2 / 3;
        grid-column: 2 / -1;
        display: block;
        text-align: left;
        padding-right: 1em;
      }

      & .ability-details:empty {
        display: none;
      }

      & .ability-details[data-kind="打撃点"]::before {
        content: attr(data-kind) "＋";
      }

      & .ability-details[data-kind="地上移動速度"]::before {
        content: attr(data-kind);
      }

      & .select-attribute {
        grid-row: 2 / -1;
        grid-column: 1 / -1;
        display: flex;
        flex-flow: row;
        justify-content: flex-start;
        align-items: center;

        & select {
          width: max-content;
        }
      }
    }

    & .using-item.has-prerequisite-item {
      margin-top: 0.4em;
      grid-template-columns: max-content 1fr;

      & label {
        grid-column: 2 / 3;
      }
    }

    & .using-item.has-prerequisite-item::before {
      content: "└";
      grid-column: 1 / 2;
    }

    & .using-item:has(.ability-details[data-kind="詳細"]:not(:empty)) {
      & .ability-outline {
        display: none;
      }
    }
  }
}

form#monster.individualization #section-common > .description:has([data-related-field="description"]:empty) {
  display: none;
}
form#monster textarea[name="description"] {
  height: 16em;
  padding: 2px;
}
form#monster.individualization textarea[name="description"] {
  display: none;
}
form#monster.individualization #section-common > .loots:has(#source-loot-table:empty) {
  display: none;
}
form#monster.individualization.golem #section-common > .loots > h2 label {
  display: inline-flex;
  height: 100%;
  flex-flow: row;
  align-items: center;
  float: right;
  border: none;
  padding: 0;
  margin-top: 0.35em;
  font-size: 90%;
}
form#monster:is(:not(.individualization), :not(.golem)) #section-common > .loots > h2 label {
  display: none;
}
form#monster.individualization #loots-list {
  display: none;
}
form#monster.individualization #loots-list + .add-del-button {
  display: none;
}
form#monster div#loots-list {
  display: grid;
  grid-template-columns: 7em auto;
  white-space: nowrap;
}
form#monster div#loots-list ul li {
  border-width: 1px 0;
  border-style: solid;
}
form#monster div#loots-list ul li + li {
  border-top-width: 0;
}
form#monster div#loots-list .handle {
  display: inline-block;
  widows: 1.4em;
}
form#monster div#loots-list input {
  width: calc(100% - 1.4em - 2px);
}
form#monster ul#loots-num {
  background-color: rgba(127,127,127,0.3);
}
form#monster #source-loot-table {
  width: 100%;
  display: grid;
  grid-template-columns: max-content 1fr;
  border-left-width: 0;
  border-right-width: 0;
  border-bottom-width: 0;

  & dt {
    grid-column: 1 / 2;
  }

  & dd {
    grid-column: 2 / 3;
    text-align: left;
  }
}
form#monster #source-loot-table:empty,
form#monster .loots-disabled #source-loot-table {
  display: none;
}

form#monster .mount-equipments {
  width: 100%;

  & .parts {
    width: 100%;
    display: grid;
    grid-template-columns: 1fr;

    & :is(dt, dd).part {
      grid-column: 1 / -1;
      width: 100%;
    }

    & dt.part {
      display: flex;
      flex-flow: row;
      justify-content: center;
      align-items: center;
      background-color: var(--monster-head-bg-color);
      padding: 0 1em;
      margin-bottom: 0.35em;
    }

    & dt.part:not(:first-of-type) {
      margin-top: 0.75em;
    }
  }

  & .equipments {
    width: 100%;
    display: grid;
    grid-template-rows: repeat(2, max-content);
    grid-template-columns: max-content 1fr;
    margin: 0;

    & .weapon {
      grid-row: 1 / 2;
      padding-top: 0.125em;
    }

    & .armor {
      grid-row: 2 / 3;
      border-style: solid;
      border-color: lightgray;
      border-width: 1px 0 1px 0;
      padding: 0.25em 0;
      margin-top: 0.25em;
    }

    & dt:is(.weapon, .armor) {
      grid-column: 1 / 2;
    }

    & dt:is(.weapon, .armor)::after {
      content: "";
      display: inline-block;
      height: 100%;
      width: 1px;
      box-sizing: border-box;
      border-right: 1px dotted lightgray;
      margin: 0 0.5em;
    }

    & dd.weapon,
    & dd.armor {
      grid-column: 2 / 3;
      width: 100%;
    }

    & input {
      display: inline-block;
      min-width: initial;
    }

    & input[type="number"] {
      width: 4em;
    }

    & .weapon-settings,
    & .armor-settings {
      width: 100%;
      display: grid;
      grid-template-rows: repeat(2, max-content);
      grid-template-columns: repeat(4, max-content max-content);
      margin: 0;

      & dt {
        display: flex;
        flex-flow: row;
        justify-content: flex-end;
        align-items: center;
        font-weight: normal;
      }

      & dt::after {
        content: none;
      }

      & dd {
        width: 100%;
        display: grid;
        grid-template-rows: auto;
        grid-template-columns: max-content max-content;

        & input {
          grid-row: 1 / -1;
          grid-column: 2 / 3;
          margin: 0;
        }
      }

      & dd::before {
        display: inline-flex;
        height: 100%;
        justify-content: center;
        align-items: center;
      }

      & dd.name::before {
        content: ":";
      }

      & dd:not(.name)::before {
        content: "+";
      }

      & :is(dt, dd).name {
        grid-row: 1 / 2;
        margin-bottom: 0.35em;
      }

      & dt.name {
        grid-column: 1 / 2;
      }

      & dd.name {
        grid-column: 2 / 5;
      }
    }
  }
}
@media screen and (min-width: 736px) {
  form#monster .mount-equipments {
    & .weapon-settings,
    & .armor-settings {
      & :is(dt, dd):not(.name) {
        grid-row: 2 / 3;
      }
    }

    & .weapon-settings {
      & dt:is(.damage) {
        margin-left: 0.5em;
      }

      & dt.accuracy {
        grid-column: 1 / 2;
      }

      & dd.accuracy {
        grid-column: 2 / 3;
      }

      & dt.damage {
        grid-column: 3 / 4;
      }

      & dd.damage {
        grid-column: 4 / 5;
      }
    }

    & .armor-settings {
      & dt:is(.defense, .hp, .mp) {
        margin-left: 0.5em;
      }

      & dt.evasion {
        grid-column: 1 / 2;
      }

      & dd.evasion {
        grid-column: 2 / 3;
      }

      & dt.defense {
        grid-column: 3 / 4;
      }

      & dd.defense {
        grid-column: 4 / 5;
      }

      & dt.hp {
        grid-column: 5 / 6;
      }

      & dd.hp {
        grid-column: 6 / 7;
      }

      & dt.mp {
        grid-column: 7 / 8;
      }

      & dd.mp {
        grid-column: 8 / 9;
      }
    }
  }
}
@media screen and (max-width: 735px) {
  form#monster .mount-equipments {
    & .equipments {
      & .weapon-settings,
      & .armor-settings {
        grid-template-columns: max-content 1fr;

        & :is(dt, dd):not(:last-of-type) {
          margin-bottom: 0.35em;
        }

        & dt {
          grid-column: 1 / 2;
        }

        & dd {
          grid-column: 2 / 3;
        }
      }
    }
  }
}

form#monster .color-sample .name {
  border-width: 2px 0 0;
  border-color: var(--monster-level-bg-color);
  background: transparent;
  position: relative;
  padding-left: 1.8em;
}
form#monster .color-sample .name::before {
  content: "！";
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 1.5em;
  background-color: var(--monster-level-bg-color);
  background-image: linear-gradient(to bottom, transparent, rgba(0,0,0,0.4));
  color: #fff;
  text-align: center;
}
form#monster .color-sample .box,
form#item .color-sample .box,
form#arts .color-sample .box {
  border-width: 0;
  border-radius: 0;
  box-shadow: none;
  background: var(--box-base-bg-color);
}
.night form#monster .color-sample .night,
.night form#item .color-sample .night,
.night form#arts .color-sample .night {
  --box-base-bg-color-d: var(--box-base-bg-color-l);
}
form#monster .color-sample .data-table,
form#item .color-sample .data-table,
form#arts .color-sample .data-table {
  width: 100%;
  border-width: 1.01px;
  border-style: double;
  border-color: var(--box-outside-border-color);
}
form#monster .color-sample .data-table th {
  background-color: var(--monster-head-bg-color);
}
form#monster .color-sample .data-table td,
form#item .color-sample .data-table td,
form#arts .color-sample .data-table td {
  padding: .2rem;
  border-width: 1px;
  border-style: solid;
  border-color: var(--box-inside-border-color);
  text-align: center;
}
form#monster .color-sample .data-table tbody tr:nth-child(even) td,
form#item .color-sample .data-table tbody tr:nth-child(even) td {
  background-color: var(--box-even-rows-bg-color);
}
form#monster .color-sample .box h2 {
  padding: .3rem .5rem;
  background-color: var(--monster-head-bg-color) !important;
}
/* // アイテム
---------------------------------------------------------------------------------------------------- */
form#item div.box {
  margin: var(--box-v-gap) 0;
  overflow-x: auto;
}
form#item #area-name {
  font-weight: bold;
}
form#item #item-name {
  flex-grow: 1;
}
form#item #item-name input {
  width: calc(100% - 1em);
}
form#item #group dl {
  display: grid;
  grid-template-columns: 2.5em 1fr;
  grid-template-rows: auto;
}
form#item div.input-data {
  padding: 1rem;
}
form#item div.input-data div {
  display: flex;
  flex-wrap: wrap;
}
form#item div.input-data dl {
  display: flex;
  margin-right: 1.5em;
}
form#item div.input-data dl dt {
  position: relative;
  width: 6em;
  margin-right: 1em;
  text-align-last: justify;
}
form#item div.input-data dl dt::after {
  content: ':';
  position: absolute;
  display: inline-block;
  width: 1em;
  text-align: center;
  font-weight: normal;
}
form#item div.input-data dl dd {
  flex-grow: 1;
  text-align: left;
}
form#item div.input-data dl dd input {
  max-width: 14em;
}
form#item div.input-data dl dd input[name="reputation"] {
  width: 6em;
}
form#item div.input-data dl dd input[name="shape"] {
  max-width: 26em;
}
form#item div.input-data dl dd input[name="summary"] {
  max-width: 100%;
}
form#item .input-arms-data {
  width: 100%;
}
form#item .input-arms-data td:first-child {
  width: 1.5em;
}
form#item .input-arms-data td {
  width: 5em;
}
form#item .input-arms-data td:last-child {
  width: auto;
}

form#item .input-data label {
  border-width: 1px;
  border-style: solid;
  border-radius: .5em;
  padding: .1em .3em;
  cursor: pointer;
}
form#item .input-data label input {
}
form#item .input-data label input:checked + span {
  font-weight: bold;
}

form#item textarea[name="effects"] {
  height: 16em;
  padding: 2px;
}
form#item textarea[name="description"] {
  height: 16em;
  padding: 2px;
}

@media screen and (max-width:735px){
  form#item div.input-data dl {
    display: block;
  }
}

form#item .color-sample .name {
  border-width: 2px 0 0;
  border-color: var(--box-outside-border-color);
  background: transparent;
  position: relative;
  padding-left: .2em;
}
form#item .color-sample .data-table th {
  background-color: var(--item-head-bg-color);
}
form#item .color-sample .box h2,
form#arts .color-sample .box h2 {
  border-width: 1px 0;
  border-style: solid;
  border-color: var(--box-outside-border-color);
  padding-left: .3em;
}


/* // 魔法
---------------------------------------------------------------------------------------------------- */
form#arts :is(div,details).box {
  margin: var(--box-v-gap) 0;
  overflow-x: auto;
}
form#arts #group dl {
  display: grid;
  grid-template-columns: 2.5em 1fr;
  grid-template-rows: auto;
}
form#arts #category dd {
  text-align: left;
}
form#arts #category dd select {
  width: max-content;
}
form#arts div.input-data {
  position: relative;
}
form#arts div.input-data > .handle {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  justify-content: center;
  align-items: center;
}
form#arts div.input-data > .handle:hover {
  background-color: rgba(128, 128, 128, 0.1);
}
form#arts div.input-data div {
  display: flex;
  flex-wrap: wrap;
}
form#arts div.input-data dl {
  display: flex;
  margin-right: 1.5em;
  margin: 0 var(--box-v-gap);
}
form#arts div.input-data dl dt {
  position: relative;
  width: 6em;
  margin-right: 1em;
  padding-top: 3px;
  text-align-last: justify;
}
form#arts div.input-data dl dt::after {
  content: ':';
  position: absolute;
  display: inline-block;
  width: 1em;
  text-align: center;
  font-weight: normal;
}
form#arts div.input-data dl dd {
  flex-grow: 1;
  text-align: left;
}
form#arts div.input-data dl dd input {
  max-width: 14em;
}
form#arts div.input-data dl.maxim input {
  width: calc(100% - 3em);
  max-width: none;
}
form#arts div.input-data dl.name dd input {
  max-width: 24em;
}
form#arts div.input-data dl.aka dd input {
  max-width: 10em;
}
form#arts div.input-data dl.class .select-input {
  display: inline-flex;
  width: 14em;
}
form#arts div.input-data dl.class dd select,
form#arts div.input-data dl.class dd input[type="text"] {
  max-width: none;
  width: 100%;
}
form#arts div.input-data dl.level dd input {
  max-width: 5em;
}
form#arts div.input-data dl.range dd input {
  max-width: 6.5em;
}
form#arts div.input-data dl.summary dd input {
  max-width: 100%;
}
form#arts div.input-data dl.song dd input[name$="Point"] {
  width: 5.5em;
}
form#arts div.input-data dl.rider dd select {
  width: max-content;
}
form#arts div.input-data dl.command dd input[type="number"],
form#arts div.input-data dl.commcost dd input[type="number"] {
  width: 4em;
}
form#arts textarea {
  height: 6em;
  padding: 2px;
}
form#arts textarea[name="godSymbol"] {
  height: 10em;
}
form#arts textarea[name="godDeity"],
form#arts textarea[name="godNote"] {
  height: 16em;
}

form#arts #data-school dl dt {
  white-space: nowrap;
}
form#arts #school-item-list {
  width: 100%;
}
form#arts #school-item-list thead th:nth-child(1) { width: 14em; }
form#arts #school-item-list thead th:nth-child(2) { width: 10em; }
form#arts #school-item-list thead th:nth-child(3) { width: auto; }
form#arts #school-item-list thead th:nth-child(4) { width: 1em; }

form#arts #school-item-list tbody td:nth-child(3) { font-size: 82%; }

@media screen and (max-width:735px){
  form#arts div.input-data dl dt {
    width: 6.5em;
  }
  form#arts div.input-data dl.name dd input[type="text"] {
    width: 14em;
  }
  form#arts div.input-data dl dd input[type="checkbox"] {
    margin-right: .2em;
  }
  form#arts div.input-data dl dd small {
    display: block;
  }
  form#arts #school-item-list thead th:nth-child(3),
  form#arts #school-item-list tbody td:nth-child(3) { display: none; }
  
  form#arts #school-item-list tbody td { font-size: 82%; }
}

form#arts .color-sample .data-table th {
  background-color: var(--arts-head-bg-color);
}
form#arts .color-sample .data-table th:first-child {
  background-color: var(--arts-name-bg-color);
  color: #fff;
}

form#arts #image {
  float: right;
  width: 280px;
  margin: 5px;
  border-width: 1px;
  border-style: solid;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}
@media screen and (max-width:735px){
  form#arts #image {
    float: none;
    width: auto;
  }
}